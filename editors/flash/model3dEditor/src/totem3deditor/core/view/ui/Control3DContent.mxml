<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%"
		  height="30"
		  contentBackgroundColor="#FFFFFF"
		  horizontalAlign="right"
		  verticalAlign="middle">
	<fx:Script>
		<![CDATA[
			
			import mx.events.ItemClickEvent;
			
			import totem3d.events.Camera3DEvent;
			
			/* public function set enableAnimationBar( value : Boolean ) : void
			{
				animationControllerBar.enabled = value;
			}
			
			protected function togglePlay ( eve : MouseEvent )  : void
			{
				var state : Boolean = ToggleButton( eve.target ).selected;
				animationController.play( state );
				// trace();
			}
			
			protected function playButtonChange ( eve : Event ) : void
			{
				if ( playButton.selected )
				{
					playButton.label = "[ ]";
				}
				else
				{
					playButton.label = ">";
				}				
			} */
			
			protected function handleCameraBar( event : ItemClickEvent ) : void
			{
				// TODO Auto-generated method stub
				dispatchEvent( new Camera3DEvent( Camera3DEvent.TRANSFORM_CAMERA, event.item.data ) );
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<!--<s:HGroup id="animationControllerBar"
			  enabled="{ModelAnimationVO.animationFileList.length > 0}}"
			  width="100%"
			  height="30"
			  horizontalAlign="left"
			  paddingLeft="5"
			  verticalAlign="middle">
		<s:Button width="35"
				  label="|&lt;"
				  click="{animationController.currentFrame = animationController.minFrames}"
				  fontFamily="Arial"
				  fontSize="14"
				  fontWeight="bold"/>
		<s:Button width="45"
				  click="{animationController.prevFrame()}"
				  label="&lt;&lt;"
				  fontFamily="Arial"
				  fontSize="14"
				  fontWeight="bold"/>
		<s:ToggleButton id="playButton"
						selected="{animationController.playing}"
						click="{togglePlay(event)}"
						change="{playButtonChange(event)}"
						width="36"
						label="&gt;"
						fontSize="14"
						fontWeight="bold"/>
		<s:Button width="45"
				  label="&gt;&gt;"
				  click="{animationController.nextFrame()}"
				  fontSize="14"
				  fontWeight="bold"/>
		<s:Label text="Frame"/>
		<s:HSlider id="frameInstanceSlider"
				  change="frameInstanceSlider_changeHandler(event)"
				   minimum="{animationController.minFrames}"
				   maximum="{animationController.maxFrames}"
				   value="@{animationController.currentFrame}"
				   width="200"/>
		<s:NumericStepper width="66"
						  minimum="{animationController.minFrames}"
						  maximum="{animationController.maxFrames}"
						  value="@{animationController.currentFrame}"/>
	</s:HGroup>-->

	<mx:ColorPicker id="viewColorChanger"/>
	<mx:ToggleButtonBar id="cameraControlButtons" x="1077" width="202" horizontalGap="5"
						itemClick="handleCameraBar(event)" selectedIndex="-1" toggleOnClick="true">

		<mx:dataProvider>
			<fx:Object label="Pan Camera"
					   data="pan"/>
			<fx:Object label="Orbit Camera"
					   data="orbit"/>
		</mx:dataProvider>

	</mx:ToggleButtonBar>
	<mx:VRule height="95%"/>
	<s:Button id="resetCameraButton" label="Reset Camera"/>
	<!--<s:ToggleButton id="panCameraButton" label="Pan Camera"/>
	<s:ToggleButton id="cameraOrbitButton" label="Orbit Camera"/>-->
</s:HGroup>
